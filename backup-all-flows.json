[{"id":"3be80343.efbc94","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"81096461.d2d73","type":"http in","z":"3be80343.efbc94","name":"","url":"/stats/ingredients","method":"post","upload":false,"swaggerDoc":"","x":200,"y":320,"wires":[["1473aaa6.3090a5"]]},{"id":"e0cf1595.a6a208","type":"http response","z":"3be80343.efbc94","name":"Repsonse","statusCode":"200","headers":{},"x":980,"y":420,"wires":[]},{"id":"1473aaa6.3090a5","type":"function","z":"3be80343.efbc94","name":"Load Database","func":"msg.payload.ingredientsDB = [\n    {\n      Product: 'Almond milk',\n      CO2: 1.09,\n      Energy: 1.09,\n      Water: 1.09\n    },\n    {\n      Product: 'Almonds',\n      CO2: 2.18,\n      Energy: 26.31,\n      Water: 1.9\n    },\n    {\n      Product: 'Beef',\n      CO2: 27.76,\n      Energy: 164.22,\n      Water: 0.47\n    },\n    {\n      Product: 'Cheese slices',\n      CO2: 8.29,\n      Energy: 35.5,\n      Water: 0.15\n    },\n    {\n      Product: 'Cheese spread',\n      CO2: 6.2,\n      Energy: 26.71,\n      Water: 0.11\n    },\n    {\n      Product: 'Chicken',\n      CO2: 6.82,\n      Energy: 64.14,\n      Water: 0.34\n    },\n    {\n      Product: 'Chocolate',\n      CO2: 14.67,\n      Energy: 90.25,\n      Water: 0.38\n    },\n    {\n      Product: 'Chocolate milk',\n      CO2: 4.65,\n      Energy: 26.92,\n      Water: 0.11\n    },\n    {\n      Product: 'Corn',\n      CO2: 0.19,\n      Energy: 1.88,\n      Water: 0.06\n    },\n    {\n      Product: 'Dried Beef',\n      CO2: 27.76,\n      Energy: 164.22,\n      Water: 0.47\n    },\n    {\n      Product: 'Dry Pasta',\n      CO2: 1.49,\n      Energy: 17.23,\n      Water: 0.01\n    },\n    {\n      Product: 'Fresh ravioli with meat',\n      CO2: 10.25,\n      Energy: 66.22,\n      Water: 0.16\n    },\n    {\n      Product: 'Fresh ravioli with spinach and ricotta',\n      CO2: 3.06,\n      Energy: 20.38,\n      Water: 0.04\n    },\n    {\n      Product: 'Gruy\\ufffdre',\n      CO2: 8.29,\n      Energy: 35.5,\n      Water: 0.15\n    },\n    {\n      Product: 'Ham',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Lentils',\n      CO2: 0.78,\n      Energy: 5.67,\n      Water: 0.14\n    },\n    {\n      Product: 'Low fat organic milk',\n      CO2: 1.11,\n      Energy: 1.39,\n      Water: 0\n    },\n    {\n      Product: 'Non-free range eggs',\n      CO2: 3.94,\n      Energy: 36.1,\n      Water: 0.18\n    },\n    {\n      Product: 'Pancetta',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Pork',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Pork sausages',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Quorn',\n      CO2: 0.19,\n      Energy: 1.88,\n      Water: 0.06\n    },\n    {\n      Product: 'Red kidney beans',\n      CO2: 0.78,\n      Energy: 5.67,\n      Water: 0.14\n    },\n    {\n      Product: 'Rice milk',\n      CO2: 0.26,\n      Energy: 0.26,\n      Water: 0.26\n    },\n    {\n      Product: 'Risotto rice',\n      CO2: 1.03,\n      Energy: 5.43,\n      Water: 0.35\n    },\n    {\n      Product: 'Sliced beef',\n      CO2: 27.76,\n      Energy: 164.22,\n      Water: 0.47\n    },\n    {\n      Product: 'Sliced chicken',\n      CO2: 6.8,\n      Energy: 64,\n      Water: 0.34\n    },\n    {\n      Product: 'Smoked cheese',\n      CO2: 6.2,\n      Energy: 26.71,\n      Water: 0.11\n    },\n    {\n      Product: 'Spaghetti Carbonara pre-made meal',\n      CO2: 3.44,\n      Energy: 28.52,\n      Water: 0.11\n    },\n    {\n      Product: 'Tofu',\n      CO2: 3.23,\n      Energy: 14.37,\n      Water: 0\n    },\n    {\n      Product: 'UHT milk',\n      CO2: 1.31,\n      Energy: 5.82,\n      Water: 0.02\n    },\n    {\n      Product: 'Vegetarian salami',\n      CO2: 0.19,\n      Energy: 1.88,\n      Water: 0.06\n    },\n    {\n      Product: 'Wholegrain dry pasta',\n      CO2: 1.49,\n      Energy: 17.23,\n      Water: 0.01\n    },\n    {\n      Product: 'Lamb',\n      CO2: 25.44,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Butter',\n      CO2: 11.52,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Turkey',\n      CO2: 5.9,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Rabbit',\n      CO2: 3.61,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Cod',\n      CO2: 3.49,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Eggs',\n      CO2: 3.4,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Insect',\n      CO2: 2.3,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Whole Milk',\n      CO2: 1.4,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Wheat',\n      CO2: 0.51,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Peas',\n      CO2: 0.6,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Barley',\n      CO2: 0.52,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Chickpeas',\n      CO2: 0.67,\n      Energy: '',\n      Water: ''\n    }\n  ]\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":320,"wires":[["91e347de.036768"]]},{"id":"91e347de.036768","type":"function","z":"3be80343.efbc94","name":"Calculate cost recipe","func":"\n\ningredientsDB = msg.payload.ingredientsDB;\ningredients = msg.payload.ingredients\n\n\nn_ingredients = ingredients.length;\nn_ingredients_db = ingredientsDB.length;\nvar cost_recipe = 0;\n\nvar i; \nvar j;\n\nvar ingredient;\nvar amount;\n\n\nfor (j=0; j < n_ingredients;j++){\n\n    ingredient = ingredients[j].Product;\n    amount = ingredients[j].kg;\n    \n\n    for (i=0; i < n_ingredients_db;i++){\n\n        if(ingredient == ingredientsDB[i].Product){\n            cost_recipe += ingredientsDB[i].CO2 * amount;\n            // cost_ingredients[j] = ingredientsDB[i].CO2 * amount;\n            ingredients[j].CO2 = ingredientsDB[i].CO2 * amount\n            // ingredients[j].CO3 = amount\n\n            break;\n        }\n    }\n}\n\nmsg.payload.cost_recipe = cost_recipe\nmsg.payload.worldsConsumed = cost_recipe/15\nmsg.payload.color = cost_recipe/30\n\ndelete msg.payload.ingredientsDB\n\n\nreturn msg;","outputs":1,"noerr":0,"x":600,"y":320,"wires":[["cd683591.2d12b8"]]},{"id":"4fb1cedb.91d878","type":"function","z":"3be80343.efbc94","name":"Save History","func":"cost_recipe = msg.payload.cost_recipe\nrecipe = msg.payload.ingredients\n\nvar costHist = global.get(\"costHist\")\nvar recipesHist = global.get(\"recipesHist\")\nvar stats = global.get(\"stats\")\n\n\nif (costHist === undefined){\n    var locCostHist = [];\n    global.set(\"costHist\", locCostHist)\n    costHist.push(cost_recipe)\n\n} else {\n    costHist.push(cost_recipe)\n}\n\nif (recipesHist === undefined){\n    var locRecipesHist = [];\n    global.set(\"recipesHist\", locRecipesHist)\n    recipesHist.push(recipe)\n} else {\n    recipesHist.push(recipe)\n\n}\n\nvar costHistTotal = costHist.reduce((a, b) => a + b, 0)\nvar n_recipesTotal = costHist.length\nvar averageCost = costHistTotal/n_recipesTotal\nvar averageWorldsConsumed = averageCost/15\nvar averageColor = averageCost/30\n\nvar stats = [   \n    {\n        \"Name\": \"costHistTotal\",\n        \"Value\": costHistTotal\n    },\n    {\n        \"Name\": \"n_recipesTotal\",\n        \"Value\": n_recipesTotal\n    }, \n    {\n        \"Name\": \"averageCost\",\n        \"Value\": averageCost\n    },     \n    {\n        \"Name\": \"averageWorldsConsumed\",\n        \"Value\": averageWorldsConsumed\n    },     \n    {\n        \"Name\": \"averageColor\",\n        \"Value\": averageColor\n    },     \n    \n    ]\n\n\nglobal.set(\"stats\", stats)\n\n\ndelete msg.payload.ingredients\n\nmsg.payload.userRecipeCostArray = costHist\nmsg.payload.allRecipes = recipesHist\nmsg.payload.stats = stats\n\n\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":420,"wires":[["e0cf1595.a6a208"]]},{"id":"3e998871.776858","type":"http in","z":"3be80343.efbc94","name":"","url":"/recipes","method":"delete","upload":false,"swaggerDoc":"","x":180,"y":520,"wires":[["9d875865.42bff"]]},{"id":"9d875865.42bff","type":"function","z":"3be80343.efbc94","name":"Delete History","func":"var locCostHist = [];\nglobal.set(\"costHist\", locCostHist)\n\nvar locRecipesHist = [];\nglobal.set(\"recipesHist\", locRecipesHist)\n\n\nvar locStats = [];\nglobal.set(\"stats\", locStats)\n\n\nreturn msg;","outputs":1,"noerr":0,"x":800,"y":520,"wires":[["599c9784.cec138"]]},{"id":"599c9784.cec138","type":"http response","z":"3be80343.efbc94","name":"Repsonse","statusCode":"200","headers":{},"x":980,"y":520,"wires":[]},{"id":"cd683591.2d12b8","type":"http response","z":"3be80343.efbc94","name":"Repsonse","statusCode":"","headers":{},"x":980,"y":320,"wires":[]},{"id":"932aaca8.6f3bd","type":"http in","z":"3be80343.efbc94","name":"","url":"/recipes","method":"post","upload":false,"swaggerDoc":"","x":170,"y":420,"wires":[["f6402004.e42938"]]},{"id":"f6402004.e42938","type":"function","z":"3be80343.efbc94","name":"Load Database","func":"msg.payload.ingredientsDB = [\n    {\n      Product: 'Almond milk',\n      CO2: 1.09,\n      Energy: 1.09,\n      Water: 1.09\n    },\n    {\n      Product: 'Almonds',\n      CO2: 2.18,\n      Energy: 26.31,\n      Water: 1.9\n    },\n    {\n      Product: 'Beef',\n      CO2: 27.76,\n      Energy: 164.22,\n      Water: 0.47\n    },\n    {\n      Product: 'Cheese slices',\n      CO2: 8.29,\n      Energy: 35.5,\n      Water: 0.15\n    },\n    {\n      Product: 'Cheese spread',\n      CO2: 6.2,\n      Energy: 26.71,\n      Water: 0.11\n    },\n    {\n      Product: 'Chicken',\n      CO2: 6.82,\n      Energy: 64.14,\n      Water: 0.34\n    },\n    {\n      Product: 'Chocolate',\n      CO2: 14.67,\n      Energy: 90.25,\n      Water: 0.38\n    },\n    {\n      Product: 'Chocolate milk',\n      CO2: 4.65,\n      Energy: 26.92,\n      Water: 0.11\n    },\n    {\n      Product: 'Corn',\n      CO2: 0.19,\n      Energy: 1.88,\n      Water: 0.06\n    },\n    {\n      Product: 'Dried Beef',\n      CO2: 27.76,\n      Energy: 164.22,\n      Water: 0.47\n    },\n    {\n      Product: 'Dry Pasta',\n      CO2: 1.49,\n      Energy: 17.23,\n      Water: 0.01\n    },\n    {\n      Product: 'Fresh ravioli with meat',\n      CO2: 10.25,\n      Energy: 66.22,\n      Water: 0.16\n    },\n    {\n      Product: 'Fresh ravioli with spinach and ricotta',\n      CO2: 3.06,\n      Energy: 20.38,\n      Water: 0.04\n    },\n    {\n      Product: 'Gruy\\ufffdre',\n      CO2: 8.29,\n      Energy: 35.5,\n      Water: 0.15\n    },\n    {\n      Product: 'Ham',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Lentils',\n      CO2: 0.78,\n      Energy: 5.67,\n      Water: 0.14\n    },\n    {\n      Product: 'Low fat organic milk',\n      CO2: 1.11,\n      Energy: 1.39,\n      Water: 0\n    },\n    {\n      Product: 'Non-free range eggs',\n      CO2: 3.94,\n      Energy: 36.1,\n      Water: 0.18\n    },\n    {\n      Product: 'Pancetta',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Pork',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Pork sausages',\n      CO2: 10.76,\n      Energy: 91.4,\n      Water: 0.52\n    },\n    {\n      Product: 'Quorn',\n      CO2: 0.19,\n      Energy: 1.88,\n      Water: 0.06\n    },\n    {\n      Product: 'Red kidney beans',\n      CO2: 0.78,\n      Energy: 5.67,\n      Water: 0.14\n    },\n    {\n      Product: 'Rice milk',\n      CO2: 0.26,\n      Energy: 0.26,\n      Water: 0.26\n    },\n    {\n      Product: 'Risotto rice',\n      CO2: 1.03,\n      Energy: 5.43,\n      Water: 0.35\n    },\n    {\n      Product: 'Sliced beef',\n      CO2: 27.76,\n      Energy: 164.22,\n      Water: 0.47\n    },\n    {\n      Product: 'Sliced chicken',\n      CO2: 6.8,\n      Energy: 64,\n      Water: 0.34\n    },\n    {\n      Product: 'Smoked cheese',\n      CO2: 6.2,\n      Energy: 26.71,\n      Water: 0.11\n    },\n    {\n      Product: 'Spaghetti Carbonara pre-made meal',\n      CO2: 3.44,\n      Energy: 28.52,\n      Water: 0.11\n    },\n    {\n      Product: 'Tofu',\n      CO2: 3.23,\n      Energy: 14.37,\n      Water: 0\n    },\n    {\n      Product: 'UHT milk',\n      CO2: 1.31,\n      Energy: 5.82,\n      Water: 0.02\n    },\n    {\n      Product: 'Vegetarian salami',\n      CO2: 0.19,\n      Energy: 1.88,\n      Water: 0.06\n    },\n    {\n      Product: 'Wholegrain dry pasta',\n      CO2: 1.49,\n      Energy: 17.23,\n      Water: 0.01\n    },\n    {\n      Product: 'Lamb',\n      CO2: 25.44,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Butter',\n      CO2: 11.52,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Turkey',\n      CO2: 5.9,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Rabbit',\n      CO2: 3.61,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Cod',\n      CO2: 3.49,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Eggs',\n      CO2: 3.4,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Insect',\n      CO2: 2.3,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Whole Milk',\n      CO2: 1.4,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Wheat',\n      CO2: 0.51,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Peas',\n      CO2: 0.6,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Barley',\n      CO2: 0.52,\n      Energy: '',\n      Water: ''\n    },\n    {\n      Product: 'Chickpeas',\n      CO2: 0.67,\n      Energy: '',\n      Water: ''\n    }\n  ]\n\nreturn msg;","outputs":1,"noerr":0,"x":400,"y":420,"wires":[["1667525b.9d5256"]]},{"id":"1667525b.9d5256","type":"function","z":"3be80343.efbc94","name":"Calculate cost recipe","func":"ingredientsDB = msg.payload.ingredientsDB;\ningredients = msg.payload.ingredients\n\n\nn_ingredients = ingredients.length;\nn_ingredients_db = ingredientsDB.length;\nvar cost_recipe = 0;\n\nvar i; \nvar j;\n\nvar ingredient;\nvar amount;\n\n\nfor (j=0; j < n_ingredients;j++){\n\n    ingredient = ingredients[j].Product;\n    amount = ingredients[j].kg;\n    \n\n    for (i=0; i < n_ingredients_db;i++){\n\n        if(ingredient == ingredientsDB[i].Product){\n            cost_recipe += ingredientsDB[i].CO2 * amount;\n            // cost_ingredients[j] = ingredientsDB[i].CO2 * amount;\n            ingredients[j].CO2 = ingredientsDB[i].CO2 * amount\n            // ingredients[j].CO3 = amount\n\n            break;\n        }\n    }\n}\n\nmsg.payload.cost_recipe = cost_recipe\nmsg.payload.worldsConsumed = cost_recipe/15\nmsg.payload.color = cost_recipe/30\n\ndelete msg.payload.ingredientsDB\n\n\nreturn msg;","outputs":1,"noerr":0,"x":600,"y":420,"wires":[["4fb1cedb.91d878"]]},{"id":"6116034b.b705b4","type":"function","z":"3be80343.efbc94","name":"Load History","func":"\nvar costHist = global.get(\"costHist\")\nvar recipesHist = global.get(\"recipesHist\")\nvar stats = global.get(\"stats\")\n\n\nif (costHist === undefined){\n    node.warn('costHist undefined')\n}\n\nif (recipesHist === undefined){\n    node.warn('recipesHist undefined')\n}\n\nif (stats === undefined){\n    node.warn('stats undefined')\n}\n\n\ndelete msg.payload.ingredients\n\nmsg.payload.userRecipeCostArray = costHist\nmsg.payload.allRecipes = recipesHist\nmsg.payload.stats = stats\n\n\nreturn msg;","outputs":1,"noerr":0,"x":790,"y":460,"wires":[["2e82d6f7.e31e4a"]]},{"id":"d4accb30.2245e8","type":"http in","z":"3be80343.efbc94","name":"","url":"/recipes","method":"get","upload":false,"swaggerDoc":"","x":170,"y":460,"wires":[["6116034b.b705b4"]]},{"id":"2e82d6f7.e31e4a","type":"http response","z":"3be80343.efbc94","name":"Repsonse","statusCode":"200","headers":{},"x":980,"y":460,"wires":[]}]